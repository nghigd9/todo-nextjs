import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useState } from 'react';
import Button from '@atlaskit/button';
import TextField from '@atlaskit/textfield';
import EditFilledIcon from '@atlaskit/icon/glyph/edit-filled';
import TrashIcon from '@atlaskit/icon/glyph/trash';
import axios from 'axios';

const url = 'http://localhost:3000/api/task';

export default function Home(props) {
    const [tasks, setTasks] = useState(props.tasks);
    const [task, setTask] = useState({ task: '' });

    const handleChange = (e) => {
        let text = e.target.value;
        setTask({ task: text });
    };

    const onAddTaskBtnClick = async (e) => {
        if (task.task === '') {
            return;
        }
        try {
            if (task._id) {
            } else {
                const { data } = await axios.post(url, task);
                setTasks((prev) => [data.data, ...prev]);
                setTask({ task: '' });
            }
        } catch (err) {
            console.log(err);
        }
    };

    const handleCheckDoneClick = async (id) => {
        setTasks((prev) =>
            prev.map((task) => {
                if (task._id === id) {
                    task.compledted = task.compledted ? false : true;
                    let data = axios.put(url + '/' + task._id, task);
                    data.then((data) => console.log(data.data));
                }
                return task;
            })
        );
    };

    const handleActionEdit = async (id) => {
        console.log(id);
    };

    return (
        <>
            <div className={styles.container}>
                <Head>
                    <title>TODO APP</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>

                <div className={styles.container}>
                    <form className={styles.form_container}>
                        <TextField
                            className={styles.input}
                            elemAfterInput={
                                <Button className={styles.btn_add_task} onClick={onAddTaskBtnClick}>
                                    Add
                                </Button>
                            }
                            type="text"
                            placeholder="type your task..."
                            onChange={handleChange}
                        />

                        {tasks.map((task) => (
                            <div className={styles.task_item} key={task._id}>
                                <input
                                    type="checkbox"
                                    className={styles.check_box}
                                    checked={task.completed}
                                    onClick={() => handleCheckDoneClick(task._id)}
                                />
                                <p className={task.compledted ? styles.task_text + ' ' + styles.line_through : styles.task_text}>
                                    {task.task}
                                </p>

                                <div className="task_action">
                                    <span className={styles.task_icon + ' ' + styles.icon_edit} onClick={() => handleActionEdit(task._id)}>
                                        <EditFilledIcon />
                                    </span>
                                    <span className={styles.task_icon + ' ' + styles.icon_remove}>
                                        <TrashIcon />
                                    </span>
                                </div>
                            </div>
                        ))}
                    </form>
                </div>
            </div>
        </>
    );
}

export const getServerSideProps = async () => {
    const { data } = await axios.get(url);
    return {
        props: {
            tasks: data.data,
        },
    };
};
